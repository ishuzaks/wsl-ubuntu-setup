---
- name: Disable ctrl+s and ctrl+q
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    create: true
    insertafter: EOF
    marker: "# {mark} ANSIBLE disable ctrl+s and ctrl+q"
    block: |
      if [[ -t 0 ]]; then
        stty stop undef
        stty start undef
      fi
    mode: "0644"

- name: Add integration with 1password
  ansible.builtin.blockinfile:
    path: ~/.bash_aliases
    create: true
    insertafter: EOF
    marker: "# {mark} ANSIBLE integration with 1password"
    block: "{{ item }}"
    mode: "0644"
  with_file:
    - block_files/part_bash_aliases.sh

- name: Check existence of ssh.exe
  ansible.builtin.command:
    cmd: which ssh.exe
  register: existence_ssh_exe
  ignore_errors: true
  changed_when: false

- name: Add integration with 1password for git
  community.general.git_config:
    scope: global
    name: core.sshCommand
    value: bash -c "type ssh.exe"
    file: ~/.gitconfig
  when: existence_ssh_exe.rc == 0

# install pyenv
- name: Clone pyenv repository
  ansible.builtin.git:
    repo: https://github.com/pyenv/pyenv.git
    dest: ~/.pyenv
    version: v20160726
  notify:
    - configure_pyenv

- name: Add pyenv startup commands
  ansible.builtin.include_tasks: tasks/user_configure_pyenv.yaml
  loop:
    - ~/.bashrc
    - ~/.profile
    - ~/.bash_profile
    - ~/.bash_login
  loop_control:
    loop_var: startup_file_path

- name: Fetch poetry installer
  ansible.builtin.uri:
    url: https://install.python-poetry.org
    return_content: true
  register: poetry_installer

- name: Run poetry installer
  ansible.builtin.command:
    cmd: python3
    stdin: "{{ poetry_installer.content }}"
    creates: ~/.local/bin/poetry

- name: Check poetry config virtualenvs.in-project
  ansible.builtin.command:
    cmd: ~/.local/bin/poetry config virtualenvs.in-project
  register: virtualenvs_in_project
  changed_when: false

- name: Set virtualenvs.in-project to true
  ansible.builtin.command:
    cmd: ~/.local/bin/poetry config virtualenvs.in-project true
  when: virtualenvs_in_project.stdout.lower() != "true"
  register: result_cmd
  changed_when: result_cmd.rc == 0
